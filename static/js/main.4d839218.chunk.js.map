{"version":3,"sources":["App.js","index.js"],"names":["monthNames","daysInYear","year","isLeapYear","App","useState","Date","date","setDate","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","hoursInMonth","getFullYear","getMonth","getDate","nextMonth","monthStart","getTime","hoursCompleted","hoursLeft","hoursPercent","daysIntoYear","Math","ceil","daysLeft","daysPercent","className","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGMA,G,MAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAClE,OAAQ,SAAU,YAAa,UAAW,WAAY,WAAY,YAGpE,SAASC,EAAWC,GAClB,OAGF,SAAoBA,GAClB,OAAOA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,GAAKA,EAAO,IAAM,EAJtDC,CAAWD,GAAQ,IAAM,IA+DnBE,MApCf,WAAgB,IAAD,EACWC,mBAAS,IAAIC,MADxB,mBACNC,EADM,KACAC,EADA,MApBf,SAAqBC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAIR,GAAc,OAAVH,EAAgB,CAClB,IAAIK,EAAKC,aAJX,WACEL,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAE5B,CAACL,IAMJQ,EAAY,WACVV,EAAQ,IAAIF,QACX,KAEH,IAAMa,EAAgF,GAAjE,IAAIb,KAAKC,EAAKa,cAAeb,EAAKc,WAAa,EAAG,GAAGC,UACpEC,EAAY,IAAIjB,KAAKC,EAAKa,cAAeb,EAAKc,WAAa,EAAG,GAC9DG,EAAa,IAAIlB,KAAKC,EAAKa,cAAeb,EAAKc,WAAY,GAAGI,UAE9DC,GADMnB,EAAKkB,UACaD,GAAc,IAAO,GAAK,GAClDG,EAAYR,EAAeO,EAC3BE,EAAeF,EAAiBP,EAAe,IAC/CU,EAAeC,KAAKC,MAAMxB,EAAO,IAAID,KAAKC,EAAKa,cAAe,EAAG,IAAM,OACvEY,EAAW/B,EAAWM,EAAKa,eAAiBS,EAC5CI,EAAcJ,EAAe5B,EAAWM,EAAKa,eAAiB,IAEpE,OACE,yBAAKc,UAAU,OACb,4BAAQA,UAAU,cAChB,mCACQlC,EAAWO,EAAKc,YADxB,KACuCM,EAAUQ,QAAQ,GADzD,gBAC0EnC,EAAWuB,EAAUF,YAD/F,IAEG,6BACAO,EAAaO,QAAQ,GAHxB,wBAKA,2BACGH,EADH,iBAC2BzB,EAAKa,cADhC,IAEE,6BACCa,EAAYE,QAAQ,GAHvB,0BCxDRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4d839218.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", \"January\"\n];\n\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction App() {\n  const [date, setDate] = useState(new Date());\n\n  useInterval(() => {\n    setDate(new Date());\n  }, 1000)\n\n  const hoursInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate() * 24;\n  const nextMonth = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n  const monthStart = new Date(date.getFullYear(), date.getMonth(), 1).getTime();\n  const now = date.getTime();\n  const hoursCompleted = (now - monthStart) / 1000 / 60 / 60;\n  const hoursLeft = hoursInMonth - hoursCompleted;\n  const hoursPercent = hoursCompleted / hoursInMonth * 100;\n  const daysIntoYear = Math.ceil((date - new Date(date.getFullYear(), 0, 1)) / 86400000);\n  const daysLeft = daysInYear(date.getFullYear()) - daysIntoYear;\n  const daysPercent = daysIntoYear / daysInYear(date.getFullYear()) * 100;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          It's {monthNames[date.getMonth()]}. {hoursLeft.toFixed(2)} hours until {monthNames[nextMonth.getMonth()]}.\n           <br />\n          {hoursPercent.toFixed(2)}% through the month.\n        </p>\n        <p>\n          {daysLeft} days left in {date.getFullYear()}.\n          <br />\n          {daysPercent.toFixed(2)}% through the year.\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}